Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-06-21T00:09:07+08:00

====== JavaScript ======
Created Sunday 21 June 2020

* ''Array.fill'' 会创建同一元素的浅拷贝，例如 ''var example = Array(10).fill([])'' 会创建出包含 10 个相同数组的二维数组，如果这时 ''example[5].push(1)''，所有的 10 个数组都会变成 ''[1]''
* Web worker use Fetch
{{{code: lang="javascript" linenumbers="True"
const worker = `
  this.onmessage = function(msg) {
    fetch(
      'https://day.ebichu.cc/api/#'.replace('#', msg.data)
    ).then(r => r.json()).then((res) => this.postMessage(res))
  }
`
const w1 = new Worker(URL.createObjectURL(new Blob([worker])))
w1.onmessage = (res) => console.log(res.data)
w1.postMessage(23)
}}}

* [[https://medium.com/trabe/mocking-different-values-for-the-same-module-using-jest-a7b8d358d78b|Jest mocking different values for the same module]]
* ReadableStream 示例，以 1s 间隔写入 2 个 chunk，2s 间隔读取数据，造成数据挤压{{{code: lang="js" linenumbers="True"
const data = Array(20).fill(0).map((_, i) => i)

const stream = new ReadableStream({
	start(controller) {
		let pos = 0
		const pushStream = () => {
			// push to stream every 1s
			setTimeout(() => {
				controller.enqueue(data[pos])
				controller.enqueue(data[pos])
				console.log('desired size:', controller.desiredSize)
				if (pos < data.length) {
					pos += 1
					pushStream()
				}
			}, 1000)
		}
		pushStream()
	},
}, {
	highWaterMark: 2
})
let reader = stream.getReader()

function read() {
	reader.read().then(({done, value}) => {
		console.log('read: ', value)
		if (!done) {
			// read stream every 2s
			setTimeout(read, 2000)
		}
	})
}
read()
}}}

